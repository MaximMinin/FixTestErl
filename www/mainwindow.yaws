<html>

<head>
    <title>FixTestErl</title>
</head>

<body>
    <table>
        <tr>
            <td>
                <a href="https://github.com/MaximMinin/FixTestErl" target="_blank">
                <div class="logo">
                   <img src="images/fixTestErl.jpg" width="250" alt="FixTestErl"/>
                </div>
                </a>
            </td>
            <td>
                <div id="entry">
                <h3>Upload a test case file to the server</h3>
                <form enctype="multipart/form-data" method="post" action="upload.yaws"><input type="submit" value="Upload"></input><input type="file" width="50" name="foo"></input></form>
                </div>
            </td>
        </tr>
    </table>

<br><br><br>

<div>
<erl>
out(A) ->
B = code:all_loaded(),
L =  lists:map(fun({_,Name}) -> 
                    case Name of
                        preloaded ->
                            false;
                        _Else ->  
                             C = string:words(Name, $/), 
                             M = string:sub_word(Name, C, $/), 
                             Module = string:sub_word(M, 1, $.), 
                             T = erlang:list_to_existing_atom(Module),  
                             case lists:keyfind([test_case_template], 2, T:module_info(attributes)) of
                                false -> false; 
                                _Other -> Module 
                              end 
                    end 
    end, B),
AvailableTests = lists:filter(fun(X) -> X =/= false end, L),
Testcases = lists:filter(fun(X) -> case X of
                                    {registered_name, _} -> true; 
                                    _else -> false 
                                    end 
                         end, lists:flatmap(fun(X) ->
                                                    erlang:process_info(X) end,
                                            lists:map(fun({_,Pid,_,_}) -> Pid end, 
                                                      supervisor:which_children(fixTestErl_sup)
                                                      )
                                            )
                          ),
RunningTests = lists:map(fun({_, Name}) -> 
                                 N = erlang:atom_to_list(Name),
                                 lists:sublist(N, 5, erlang:length(N)-4) 
                         end, Testcases),
Header = {tr, [], [
               {th, [], {p, [{class, "foo"}], "Name"}},
               {th, [], {p, [{class, "foo"}], "Mode"}},
               {th, [], {p, [{class, "foo"}], "Port"}},
               {th, [], {p, [{class, "foo"}], "Fix version"}},
               {th, [], {p, [{class, "foo"}], "Server"}},
               {th, [], {p, [{class, "foo"}], "Start / Stop"}},
               {th, [], {p, [{class, "foo"}], "Showlog *"}}
              ]},
Rows = lists:map(fun(T) -> 
           Start = case lists:member(T, RunningTests) of
                false ->
                   {td, [{align, "center"}],
                  {form, [{method, "post"}, {action, "/start/"++T}], 
                  {input, [{type, "submit"}, {value, "start"}]}}
                   };
                true ->
                   {td, [{align, "center"}],
                  {form, [{method, "post"}, {action, "/stop/"++T}], 
                  {input, [{type, "submit"}, {value, "stop"}]}}
                   }
           end,
           Log = case lists:member(T, RunningTests) of
                true ->
                   {td, [{align, "center"}],
                  {form, [{method, "post"}, {action, "/showLog/"++T}], 
                  {input, [{type, "submit"}, {value, "showLog"}]}}
                   };
                false ->
                   {td, [], {p, [{class, "foo"}], ""}}
           end,
           M = erlang:list_to_atom(T),
           %%{ok, F} = file:read_file("/home/minin/git/FixTestErl/example/quote.erl"), 
           {tr, [],
               [
%%                 {td, [{title, erlang:binary_to_list(binary:replace(F, <<"\"">>, <<"|">>, [global]))}], {p, [{class, "foo"}], T}},
                {td, [], {p, [{class, "foo"}], T}},
                  {td, [], {p, [{class, "foo"}], lists:concat(["", M:get_mod()])}}, 
                 {td, [], {p, [{class, "foo"}], lists:concat(["", M:get_port()])}}, 
                 {td, [], {p, [{class, "foo"}], M:get_fix_version()}},
                 {td, [], {p, [{class, "foo"}], lists:concat(["", M:get_ip()])}},
                 Start,
                 Log
                ]
           } 
  end, 
AvailableTests),

TabT= {table, [{border, "1"}], [Header|Rows]},
{ehtml, TabT}.
</erl>
</div>

</body>
</html>



